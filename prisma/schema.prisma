// https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id        String   @id @default(uuid()) @db.Uuid
  name      String
  email     String   @unique
  login     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  tweets tweets[]
  likes  likes[]
}

model tweets {
  // forma perform√°tica de criar uuid com o postgres
  // id String @id @default(dbgenerated("(concat('usr_', gen_random_uuid()))::TEXT"))
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user      users?   @relation(fields: [userId], references: [id])
  userId    String?  @db.Uuid
  text      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  retweetId String?  @unique @db.Uuid
  reweetRef tweets?  @relation("Retweet", fields: [retweetId], references: [id])
  retweet   tweets[] @relation("Retweet")

  likes likes[]
}

model likes {
  id        Int      @id @default(autoincrement())
  user      users?   @relation(fields: [userId], references: [id])
  userId    String?  @db.Uuid
  tweet     tweets?  @relation(fields: [tweetId], references: [id])
  tweetId   String?  @db.Uuid
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
